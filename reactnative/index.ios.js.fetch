import React, { Component } from 'react';
import {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TextInput,
  Button,
  ListViewr
} from 'react-native';

// import RNFetchBlob from 'react-native-fetch-blob'

// global.EventSource = require('./rn-eventsource');

// var source = new global.EventSource("http://chat.servicestack.net/event-stream");

// let data = ''
// RNFetchBlob.fs.readStream(
//     // file path
//     "http://chat.servicestack.net/event-stream",
//     // encoding, should be one of `base64`, `utf8`, `ascii`
//     'utf8')
// .then((ifstream) => {
//     ifstream.open()
//     ifstream.onData((chunk) => {
//       // when encoding is `ascii`, chunk will be an array contains numbers
//       // otherwise it will be a string 
//       console.log("onData()", chunk)
//       data += chunk
//     })
//     ifstream.onError((err) => {
//       console.log('onError()', err)
//     })
//     ifstream.onEnd(() => {  
//       console.log("onEnd()", data);
//     })
// })

var start = Date.now();
console.log("fetch() ...", Date.now() - start, "ms");
fetch("http://chat.servicestack.net/event-stream")
  .then(res => {
      console.log("then() ...", Date.now() - start, "ms");
      if (!res.ok)
        throw new Error(`${res.status} = ${res.statusText}`);

      var reader = res.body.getReader();
      return reader.read().then(function handleNext(result) {
          console.log("read() ...", Date.now() - start);
      });
  })
  .then(r => {
    console.log("then().then()", Date.now() - start, "ms");
  })
  .catch(error => {
      console.log("catch() ", error.message, Date.now() - start, "ms");
  });

export default class App extends React.Component {
  constructor() {
    super();
    this.state = { data: null };
  }

  render() {
    return (
      <View style={styles.container}>
        <Text>Open up App.js to start working on your app!!@</Text>
        <Text>Changes you make will automatically reload.</Text>
        <Text>Fetch Data</Text>
        <Text>{this.state.data}</Text>
        <Text>Fetch Error</Text>
        <Text style={{ color:"#f00" }}>{this.state.error}</Text>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
});

AppRegistry.registerComponent('reactnative', () => App);
